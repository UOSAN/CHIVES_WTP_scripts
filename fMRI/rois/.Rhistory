library(shiny)
runExample("05_sliders")
Aim2Data<-csv.read('/Users/junaid/Dropbox/DCNL/Aim2Analyses/Final_DataAll_ROInAccuracynMeasures.csv')
Aim2Data<-read.csv('/Users/junaid/Dropbox/DCNL/Aim2Analyses/Final_DataAll_ROInAccuracynMeasures.csv')
head(Aim2Data)
names(Aim2Data)
install.packages("xlsx")
library("xlsx")
library(dbplyr)
library(tidyr)
Test1<-read.xlsx('/Users/junaid/Desktop/Aim2_MVPA/Arrows_1SubTest.xls')
Test1<-read.xlsx('/Users/junaid/Desktop/Aim2_MVPA/Arrows_1SubTest.xls',1)
View(Test1)
ArrowsAll<-read.xlsx('/Users/junaid/Desktop/Aim2_MVPA/Allsubs_Arrows_clean.xls',1)
length(Test1$ResponseDirection)
View(Test1)
length(Test1$ResponseDirection[Test1$Run==1])
Test1$LL<-matrix(0,length(Test1$Trial),1)
View(Test1)
Test1$LL<-matrix(0,length(Test1$Trial),1)
Test1$LR<-matrix(0,length(Test1$Trial),1)
Test1$RR<-matrix(0,length(Test1$Trial),1)
Test1$RL<-matrix(0,length(Test1$Trial),1)
View(Test1)
View(Test1)
if ( Test1$ResponseDirection=='l' & Test1$Condition=='c') {
Test1$LL=1
}
if ( Test1$ResponseDirection=='l') {Test1$LL=1}
if ( Test1$ResponseDirection=="l") {Test1$LL=1}
View(Test1)
if ( Test1$ResponseDirection[:]=="l") {Test1$LL=1}
if ( Test1$ResponseDirection[@]=="l") {Test1$LL=1}
Test1$LL[Test1$ResponseDirection=='l' & Test1$Condition=='c']=1
Test1$LL[Test1$ResponseDirection=='l' & Test1$Condition=='c']=1
Test1$LR[Test1$ResponseDirection=='l' & Test1$Condition=='i']=1
Test1$RR[Test1$ResponseDirection=='r' & Test1$Condition=='c']=1
Test1$RL[Test1$ResponseDirection=='r' & Test1$Condition=='i']=1
Test1Conditions<-c(Test1$LL Test1$LR Test1$RR Test1$RL)
Test1Conditions<-c(Test1$LL, Test1$LR, Test1$RR, Test1$RL)
Test1Conditions
Test1Conditions<-[Test1$LL, Test1$LR, Test1$RR, Test1$RL)]
144/4
sum(Test1$LL)
sum(Test1$LR)
sum(Test1$RR)
sum(Test1$RL)
write.xlsx(Test1,'/Users/junaid/Desktop/Aim2_MVPA/Arrows_1SubTest_2.xls')
144/6
1:24:144
1:144:24
ArrowsAll<-read.xlsx('/Users/junaid/Desktop/Aim2_MVPA/Allsubs_Arrows_clean.xls',1)
Raw=read.csv("./ADHD_RS_Jan42018.csv")
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='junaidmerchant',
token='B998F6BD21E7F935E6CC1A135C78FC7F',
secret='L6zzCS8HpVW9ilj5niiDu7LUF5FQJhs0BvjE0c9k')
library(rsconnect)
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/ADHD_Shiny_FINAL.R')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/ShinyAppTest')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/ShinyAppTest/ADHD_Shiny_FINAL.R')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/ShinyAppTest')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/ADHD-RS')
library(rsconnect)
rsconnect::setAccountInfo(name='junaidmerchant',
token='B998F6BD21E7F935E6CC1A135C78FC7F',
secret='L6zzCS8HpVW9ilj5niiDu7LUF5FQJhs0BvjE0c9k')
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='junaidmerchant',
token='B998F6BD21E7F935E6CC1A135C78FC7F',
secret='L6zzCS8HpVW9ilj5niiDu7LUF5FQJhs0BvjE0c9k')
library(rsconnect)
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/SRS')
rsconnect::setAccountInfo(name='junaidmerchant',
token='7B5F397D40510E11F2FB6E87CFB5DF71',
secret='OJM/f0yMrzPOOGy0cSORiQJRBvntM8scr0AiCGJ8')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/SRS')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/SRS-2')
library(rsconnect)
#
rsconnect::setAccountInfo(name='junaidmerchant',
token='7B5F397D40510E11F2FB6E87CFB5DF71',
secret='OJM/f0yMrzPOOGy0cSORiQJRBvntM8scr0AiCGJ8')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/SRS-2')
rsconnect::deployApp('/Users/junaid/Desktop/DCNL/RDOC/Measures/SRS-2')
library(shiny)
library(bitops)
library(RCurl)
library(XLConnect)
library(ggplot2)
library(Hmisc)
library(e1071)
library(DescTools)
library(reshape2)
library(shiny)
library(rsconnect)
rsconnect::setAccountInfo(name='dcnl-georgetownu',
token='EC0A9471ACB7508EB86DE15814CE6593',
secret='xf481jlaIb1msMV+Z1wf/yUHnC1LcNmx52kRPYL5')
rsconnect::setAccountInfo(name='dcnl-georgetownu',
token='EC0A9471ACB7508EB86DE15814CE6593',
secret='xf481jlaIb1msMV+Z1wf/yUHnC1LcNmx52kRPYL5')
rsconnect::deployApp('~/Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/RDoC-SVM')
rsconnect::deployApp('~/Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/RDoC-SVM')
library(rsconnect)
rsconnect::setAccountInfo(name='dcnl-georgetownu',
token='EC0A9471ACB7508EB86DE15814CE6593',
secret='xf481jlaIb1msMV+Z1wf/yUHnC1LcNmx52kRPYL5')
rsconnect::deployApp('~/Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/RDoC-SVM')
shiny::runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/RDoC-SVM')
shiny::runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
clear
runApp('Dropbox/DCNL_code_JX/RDoC/ShinyDeployment/ADHD-RS')
install.packages("sendmailR")
?sendmail
library(sendmailR)
?sendmail
from <- sprintf("<xiaozhenyou@gmail.com>", Sys.info()[4])
to <- c("merchantjs@gmail.com", "junaid.merchant@georgetown.edu")
subject <- "Hello from R"
body <- list("It works!", mime_part(Test)) # Here 'Test is a dataframe that I created....
sendmail(from, to, subject, body, control=list(smtpServer="ASPMX.L.GOOGLE.COM"))
rom <- sprintf("<xiaozhenyou@gmail.com>", Sys.info()[4])
to <- c("merchantjs@gmail.com", "junaid.merchant@georgetown.edu")
subject <- "Hello from R"
body <- list("It works!") # Here 'Test is a dataframe that I created....
sendmail(from, to, subject, body, control=list(smtpServer="ASPMX.L.GOOGLE.COM"))
from <- sprintf("<xiaozhenyou@gmail.com>", Sys.info()[4])
to <- c("<merchantjs@gmail.com>", "<junaid.merchant@georgetown.edu>")
subject <- "Hello from R"
body <- list("It works!") # Here 'Test is a dataframe that I created....
sendmail(from, to, subject, body, control=list(smtpServer="ASPMX.L.GOOGLE.COM"))
install.packages("mailR")
library(mailR)
?send.mail
send.mail("junaid.merchant@georgetown.edu","merchantjs@gmail.com",subject="Hey",body="This is an email from R",encoding = "iso-8859-1",
html = FALSE, inline = FALSE, smtp = list(host.name = "aspmx.l.google.com", port = 25), authenticate = FALSE,
send = TRUE, attach.files = NULL, debug = FALSE)
install.packages("shinystan")
install.packages("brms")
library(brms)
--version
R --version
--version
p.adjust
p.adjust(.05,method="fdr",n=5)
p.adjust(.005,method="fdr",n=5)
p.adjust(.01,method="fdr",n=5)
p.adjust(.01,method="fdr",n=28)
p.adjust(.001,method="fdr",n=28)
p.adjust(.005,method="fdr",n=28)
p.adjust(.004,method="fdr",n=28)
p.adjust(.003,method="fdr",n=28)
p.adjust(.002,method="fdr",n=28)
p.adjust(.0015,method="fdr",n=28)
p.adjust(.0016,method="fdr",n=28)
p.adjust(.0017,method="fdr",n=28)
p.adjust(.0018,method="fdr",n=28)
p.adjust(.00175,method="fdr",n=28)
p.adjust(.0017857,method="fdr",n=28)
p.adjust(.0017857,method="fwe",n=28)
p.adjust(.0017857,method="bonferroni",n=28)
p.adjust(.0017857,method="holm",n=28)
p.adjust(.0017857,method="BH",n=28)
p.adjust(.0017857,method="BY",n=28)
df=read.csv('/Users/junaid/Desktop/DSCN/SANS/RegionsRoiMvpa.csv')
View(df)
File='/Users/junaid/Desktop/DSCN/sub-JAM012_task-JAMr2_desc-confounds_regressors.tsv'
File='/Users/junaid/Desktop/DSCN'
File='/Users/junaid/Desktop/DSCN/sub-JAM012_task-JAMr2_desc-confounds_regressors.tsv'
OutDir='/Users/junaid/Desktop/DSCN'
CenThresh=1
FileName=basename(File)
FirstUnderscore=regexpr('_',FileName)
SubID=substr(FileName,1,FirstUnderscore[1]-1)
TaskStart=regexpr('task',FileName)
DescStart=regexpr('_desc-confounds',FileName)
TaskRun=substr(FileName,TaskStart[1]+5,DescStart[1]-1)
FilePrefix=paste(SubID,'-',TaskRun,'-',sep="")
Data = read.table(file = File, sep = '\t', header = TRUE)
MoPar = Data[c("rot_x","rot_y","rot_z","trans_x","trans_y","trans_z")]
View(MoPar)
for(x in 1:6){MoParDeMean[,x]=MoPar[,x]-mean(MoPar[,x])}
MoParDeMean=MoPar
for(x in 1:6){MoParDeMean[,x]=MoPar[,x]-mean(MoPar[,x])}
View(MoParDeMean)
MoParDerv = Data[c("rot_x_derivative1","rot_y_derivative1","rot_z_derivative1","trans_x_derivative1","trans_y_derivative1","trans_z_derivative1")]
MoParDerv = Data[c("rot_x_derivative1","rot_y_derivative1","rot_z_derivative1","trans_x_derivative1","trans_y_derivative1","trans_z_derivative1")]
View(Data)
File='/Users/junaid/Desktop/CAT/sub-REDCAT150/func/sub-REDCAT150_task-cmnt_run-01_desc-confounds_regressors.tsv'
OutDir='/Users/junaid/Desktop/CAT/sub-REDCAT150/func'
FileName=basename(File)
FirstUnderscore=regexpr('_',FileName)
SubID=substr(FileName,1,FirstUnderscore[1]-1)
TaskStart=regexpr('task',FileName)
DescStart=regexpr('_desc-confounds',FileName)
TaskRun=substr(FileName,TaskStart[1]+5,DescStart[1]-1)
FilePrefix=paste(SubID,'-',TaskRun,'-',sep="")
Data = read.table(file = File, sep = '\t', header = TRUE)
MoPar = Data[c("rot_x","rot_y","rot_z","trans_x","trans_y","trans_z")]
write.table(MoPar,paste(OutDir,"/",FilePrefix,"MoPar.1D", sep=""), quote = FALSE, sep = "\t", row.names = FALSE, col.names = FALSE)
MoParDeMean=MoPar
for(x in 1:6){MoParDeMean[,x]=MoPar[,x]-mean(MoPar[,x])}
write.table(MoParDeMean,paste(OutDir,"/",FilePrefix,"MoParDeMean.1D", sep=""), quote = FALSE, sep = "\t", row.names = FALSE, col.names = FALSE)
MoParDerv = Data[c("rot_x_derivative1","rot_y_derivative1","rot_z_derivative1","trans_x_derivative1","trans_y_derivative1","trans_z_derivative1")]
View(MoParDerv)
MoParDerv=as.data.frame(MoParDerv)
View(MoParDerv)
for(x in 1:6){MoParDerv[1,x]=0}
View(MoParDerv)
for(x in 1:6){MoParDerv[1,x]<-0}
View(MoParDerv)
MoParDerv1 = Data[c("rot_x_derivative1","rot_y_derivative1","rot_z_derivative1","trans_x_derivative1","trans_y_derivative1","trans_z_derivative1")]
MoParDerv=as.data.frame(MoParDerv)
for(x in 1:6){MoParDerv[1,x]<-0}
View(MoParDerv1)
View(MoParDerv)
MoParDerv = Data[c("rot_x_derivative1","rot_y_derivative1","rot_z_derivative1","trans_x_derivative1","trans_y_derivative1","trans_z_derivative1")]
MoParDerv=as.data.frame.array(MoParDerv)
for(x in 1:6){MoParDerv[1,x]<-0}
View(MoParDerv)
write.table(MoParDerv,paste(OutDir,"/",FilePrefix,"MoParDerv.1D", sep=""), quote = FALSE, sep = "\t", row.names = FALSE, col.names = FALSE)
install.packages("swirl")
library("swirl")
swirl()
5+7
table
?table
setwd('/Users/junaid/Desktop/SANLab/CHIVES_WTP_scripts/fMRI/rois')
Files=list.files(pattern='*.txt')
Files
ROIdata=read.csv(Files[1],header = FALSE,sep="\t")
View(ROIdata)
names(ROIdata)
ROIdata=ROIdata$V2
ROIdata=read.csv(Files[1],header = FALSE,sep="\t")
ROIdata=ROIdata[,2]
?read.csv
